extends shop_common/base
block css
block header
    nav.navbar.navbar-expand-lg.navbar-light.bg-light
        a.navbar-brand(href='/logo')
            img#logo.d-inline-block.mr-1(alt='Logo' src='/static/resto/img/logocafe_black.png' width='117' height='40')
        button.navbar-toggler(type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation')
            span.navbar-toggler-icon
        #navbarSupportedContent.collapse.navbar-collapse
            ul.navbar-nav.mr-auto
            form.form-inline.my-2.my-lg-0
                ul.navbar-nav.mr-auto
                    li.nav-item.mx-3.my-3
                        a.btn.btn-warning.btn-md.text-uppercase(href='/foodmenu') Continue Shopping
                    li.nav-item.mx-3.my-2
                        a.btn.btn-outline-danger.btn-md.text-uppercase.my-2(href='/logo') Go to Home

block content
    .container(ng-app='app' ng-controller='ctr' ng-cloak)
        .py-5.text-center.text-xl
        .row
            .col-md-5.order-md-2.mb-4
                h4.d-flex.justify-content-between.align-items-center.mb-3
                    span.text-muted SUMMARY
                    span.badge.badge-secondary.badge-pill {{cartData.length}}
                ul.list-group.mb-3
                    li.list-group-item(ng-repeat='data in cartData')
                        div
                            // img.rounded-circle(ng-src='{{data.cartItem.food.image_file}}' width='80px' height='80px')
                            | {{data.cartItem.food.name}}
                            span.badge-warning.badge-secondary.badge-pill.mx-2 {{data.cartItem.quantity}}
                        div
                            span.text-muted RM {{data.cartItem.food.price*data.cartItem.quantity|number:2}}

                        button.btn.btn-danger.btn-sm.float-right(ng-click='removeCartItem(data._id)') Remove

                    li.list-group-item.d-flex.justify-content-between
                        h5 SubTotal
                        strong RM 16.00
                    li.list-group-item.d-flex.justify-content-between
                        h5 Delivery Fee
                        strong RM 6.00
                    li.list-group-item.d-flex.justify-content-between
                        h4
                            b Total
                        strong RM 6.00
            .col-md-7.order-md-1
                h4.mb-3 Billing address
                form.needs-validation(novalidate='')
                    .row
                    .mb-3
                        label(for='address') Address
                        input#address.form-control(type='text' placeholder='1234 Main St' required='')
                        .invalid-feedback
                            | Please enter your shipping address.

                    hr.mb-4
                    .custom-control.custom-checkbox
                        input#save-info.custom-control-input(type='checkbox')

                    button.btn.btn-primary.btn-lg.btn-block(href='/checkout', type='submit') Continue to Checkout







block scripts
    script(src='../static/vendor/js/angular.min.js')
    script.
        const strAppName = 'app';
        const strCtrName = 'ctr';
        const app = angular.module(strAppName, []);

        function getGETParam(name) {
            return (location.search.split(name + '=')[1] || '').split('&')[0];
        }

        app.config(['$httpProvider', function ($httpProvider) {
            $httpProvider.defaults.xsrfCookieName = 'csrftoken';
            $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';
        }]);

        app.controller(strCtrName, ['$scope', '$http',
            function ($scope, $http) {
                $scope.postFunc = function () {
                    $http({
                        method: 'POST',
                        url: '/api/cart/read',
                        data: {}
                    }).then(
                        function successCallback(response) {
                            console.log(response.data);
                            $scope.cartData = response.data;
                        },

                        function errorCallback(response) {
                        }
                    );
                };
                $scope.postFunc();

                $scope.removeCartItem = function (id) {
                    $http({
                        method: 'POST',
                        url: '/api/cart/delete',
                        data: {cartid: id}
                    }).then(
                        function successCallback(response) {
                            $scope.postFunc();
                        },

                        function errorCallback(response) {
                        }
                    );
                };
            }]);
    //
      Bootstrap core JavaScript
      ==================================================
    // Placed at the end of the document so the pages load faster
    //script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous')
    //script.
    //    window.jQuery || document.write(src='../../assets/js/vendor/jquery-slim.min.js')
    //script(src='../../assets/js/vendor/popper.min.js')
    //script(src='../../dist/js/bootstrap.min.js')
    script(src='../../assets/js/vendor/holder.min.js')
    script.
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();





